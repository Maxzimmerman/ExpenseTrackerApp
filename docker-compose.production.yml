version: '3.4'

networks:
  web:
    external: true
  expensetracker:
    external: false

volumes:
  expensetracker_postgres_data: {}
  traefik_cert_data: {}

services:
  expensetrackerapp:
    image: ${DOCKER_REGISTRY-}expensetrackerapp
    build:
      context: .
      dockerfile: ExpenseTrackerApp/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - DOTNET_RUNNING_IN_CONTAINER=true
    labels:
      - "traefik.http.routers.expensetrackerapp.rule=Host(`doughtrack.com`) || Host(`www.doughtrack.com`)"
      - "traefik.http.routers.expensetrackerapp.tls=true"
      - "traefik.http.routers.expensetrackerapp.tls.certresolver=le-rslolver"
      - "traefik.http.services.expensetrackerapp.loadbalancer.server.port=8080"
      - "traefik.http.routers.expensetrackerapp.entrypoints=websecure"
    depends_on:
      - expensetrackerapp.database
    networks:
      - web
      - expensetracker

  expensetrackerapp.database:
    image: postgres:latest
    container_name: expensetrackerapp.database
    environment:
      - POSTGRES_DB=expensetrackerdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - expensetracker_postgres_data:/var/lib/postgresql/data
    networks:
      - expensetracker
    labels:
      - "traefik.enable=false"
